PlantGrowth
mydata <- PlantGrowth
View(mydata)
View(mydata)
levelts(mydata$group)
levels(mydata$group)
library(dplyr)
group_by(mydata, group) %>%
summarise(
count = n(),
mean = mean(weight, na.rm = TRUE),
sd = sd(weight, na.rm = TRUE)
)
boxplot(weight~group, data=mydata)
ggplot(mydata, aes(x=group, y=weight))
library(ggplot2)
ggplot(mydata, aes(x=group, y=weight))
ggplot(mydata, aes(x=group, y=weight)) + geom_boxplot(notch=TRUE)
ggplot(mydata, aes(x=group, y=weight)) + geom_boxplot()
ggplot(mydata, aes(x=group, y=weight, color = group)) + geom_boxplot()
ggplot(mydata, aes(x=group, y=weight, fill = group)) + geom_boxplot()
lm(weight~data)
lm(weight~group, mydata)
summary(lm(weight~group, mydata))
summary(aov(weight~group, mydata))
anovaresult <- aov(weight~group, mydata)
summary(aov(weight~group, mydata))
TukeyHSD(anovaresult)
fisher.test(anovaresult)
TukeyHSD(anovaresult)
pairwise.t.test(anovaresult)
anovaresult
anovaresult$residuals
ToothGrowth
data <- ToothGrowth
data$dose <- factor(data$dose, levels=c(0.5, 1.0, 2.0),
labels = c("low", "med", "high"))
data
replications(len~supp*dose, data)
summary(aov(len~supp+dose, data))
summary(aov(len~supp*dose, data))
TukeyHSD(summary(aov(len~supp*dose, data)))
aov <- summary(aov(len~supp*dose, data))
aov
aov <- aov(len~supp*dose, data)
aovaov
aov
aov <- aov(len~supp+dose, data)
aov
summary(aov)
lm <- lm(len~supp+dose, data)
summary(lm)
anova(lm)
summary(lm)
TukeyHSD(anova(lm))
TukeyHSD(lm)
TukeyHSD(aov)
aov$residuals
plot(aov$residuals)
summary(lm)
View(data)
plot(aov)
TukeyHSD(aov)
summary(aov)
pairwise.t.test(len~supp)
pairwise.t.test(len, supp)
pairwise.t.test(data$len, data$supp)
pairwise.t.test(data$len, data$supp, p.adjust.method = "none")
pairwise.t.test(data$len, data$dose, p.adjust.method = "none")
library(ggplot2)
install.packages("ggplot2")
xdata <- c(11, 6, 14, 8, 14)
ydata <- c(-35, -18, -46, -22, -45)
example1 <- data.frame(x=xdata, y=ydata)
Sxy = sum(example1$x*example1$y)-
(sum(example1$x)*sum(example1$y))/nrow(example1)
Sxx = sum(example1$x^2)-
sum(example1$x)^2/nrow(example1)
B1 = Sxy/Sxx
B0 = mean(example1$y)-B1*mean(example1$x)
lm(y~x, example1)
# CORRELATION
lm <- lm(y~x, example1)
lm_summ
lm_summ <- summary(lm)
lm_summ
r_sq = lm_summ$r.squared # or you can call this value
r_sq
r_sq = summary(lm)$r.squared # or you can call this value
r_sq
sqrt
correlation = sqrt(r_sq)
correlation
cor.test(example1$x, example1$y)
setwd("D:/storage_repos/ie282122B")
deliverydata <- read.csv('deliverytime.csv')
View(deliverydata)
library(ggplot2)
ggplot(deliverydata, aes(x=distance, y=deltime, size = ncases)) +
geom_point(alpha=0.7)
ggplot(deliverydata, aes(x=distance, y=deltime, size = ncases)) +
geom_point(alpha=0.7, col='green')
ggplot(deliverydata, aes(x=distance, y=deltime, size = ncases)) +
geom_point(alpha=0.7)
lm_deltime <- lm(deltime~distance+ncases, deliverydata)
summary(lm_deltime)
0.01*60
# Hypo test
B2 = 1.615907
B2_hyp = 2
sigma = 3.259
# since we are testing for slope of n_cases,
# we use x as ncases column from delivery data
Sxx = sum(deliverydata$ncases^2)-
sum(deliverydata$ncases)^2/nrow(deliverydata)
t0 = (B2-B2_hyp)/sqrt(sigma^2/Sxx)
t0
dfe = 22
alpha = 0.05
t_crit = qt(1-alpha/2, dfe)
t_crit
if(abs(t0)>t_crit) 'REJECT Null' else 'DNR Null'
